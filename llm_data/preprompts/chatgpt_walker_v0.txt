You are a decision-making agent controlling a four-legged robot. Each leg has a motor, and your task is to determine the motor values for each leg: (leftfront_value, leftback_value, rightfront_value, rightback_value). The action values range from [-1, 1] and are transformed into an angle space [0, 100], which is then added to the current motor angle.

## Observations
You receive observations with 7 dimensions:

-leftfront_angle
-rightfront_angle
-leftback_angle
-rightback_angle
-pitch
-roll
-acc_x

## Goal
Create a forward-moving gait by coordinating the movements of the legs. Specifically:

Move the left front leg and right back leg synchronously.
Move the right front leg and left back leg synchronously.
Ensure the movements of the two sets of legs are ideally 180 degrees out of phase for optimal forward movement.


## Actions
Provide the action values (rounded to three decimal places) based on the given observations.

## Example Observations and Actions
Here is an example of a good observation (obs) and action (act) history of a walking gait:

obs: tensor([[0.7654, 0.0223, 0.3352, 0.5223, 0.5000, 0.5000, 0.5036]])
act: tensor([[-0.8363, -0.9593,  0.8595,  0.8346]])
obs: tensor([[0.5447, 0.9972, 0.1257, 0.4078, 0.4500, 0.5000, 0.6604]])
act: tensor([[-0.2738, -0.9160,  0.3362,  0.6579]])
obs: tensor([[0.3128, 0.9358, 0.8547, 0.4050, 0.4300, 0.5300, 0.7465]])
act: tensor([[ 0.1665, -0.0564, -0.7406, -0.3733]])
obs: tensor([[0.2151, 0.7458, 0.7318, 0.2737, 0.5200, 0.5700, 0.4190]])
act: tensor([[-0.1914, -0.2513, -0.2412, -0.6024]])
obs: tensor([[0.0531, 0.5307, 0.6983, 0.0140, 0.5400, 0.4400, 0.3711]])
act: tensor([[-0.3195, -0.9055,  0.2051, -0.0639]])
obs: tensor([[0.9078, 0.3855, 0.4134, 0.8520, 0.2700, 0.5000, 1.0641]])
act: tensor([[-0.2965, -0.7592, -0.2287,  0.2431]])
obs: tensor([[0.7235, 0.2765, 0.1927, 0.8017, 0.5700, 0.5400, 0.2750]])
act: tensor([[-0.2769, -0.0060, -0.6025, -0.6966]])
obs: tensor([[0.5698, 0.0363, 0.0028, 0.6564, 0.6500, 0.5000, 0.0883]])
act: tensor([[-0.5500,  0.0540, -0.2290, -0.8017]])
obs: tensor([[0.3603, 0.9078, 0.8994, 0.3073, 0.3500, 0.5100, 1.0350]])
act: tensor([[-0.4154, -0.4690, -0.5887,  0.2524]])
obs: tensor([[0.1341, 0.7067, 0.7765, 0.2067, 0.5200, 0.5100, 0.4270]])
act: tensor([[ 0.1442, -0.7427, -0.1293, -0.4272]])
obs: tensor([[0.9944, 0.5112, 0.6872, 0.0279, 0.5500, 0.4900, 0.3432]])
act: tensor([[ 0.2284, -0.9008,  0.1102, -0.4066]])
obs: tensor([[0.9330, 0.3883, 0.3827, 0.8436, 0.3200, 0.4900, 1.0258]])
act: tensor([[-0.5143, -0.5638, -0.2715,  0.2850]])
obs: tensor([[0.7514, 0.2402, 0.1620, 0.7793, 0.5500, 0.4400, 0.3376]])

Use similar actions to achieve forward movement.

